{"version":3,"sources":["logo.svg","hooks/usePreventLeave.js","hooks/useConfirm.js","hooks/useClick.js","hooks/useBeforeLeave.js","hooks/useFadeIn.js","hooks/useNetwork.js","hooks/useScroll.js","hooks/useFullscreen.js","hooks/useNotification.js","hooks/useAxios.js","App.js","reportWebVitals.js","index.js"],"names":["usePreventLeave","listener","event","preventDefault","returnValue","enablePrevent","window","addEventListener","disablePrevent","removeEventListener","useConfirm","message","onConfirm","onCancel","confirmAction","confirm","useClick","func","element","useRef","useEffect","current","console","log","textContent","useBeforeLeave","onBefore","handle","clientY","document","useFadeIn","duration","delay","style","transition","opacity","ref","useNetwork","onChange","useState","navigator","onLine","status","setStatus","handleChange","useScroll","x","y","state","setState","onScroll","e","scrollY","scrollX","useFullscreen","isFull","setIsFull","runCb","triggerFull","requestFullscreen","mozRequestFullScreen","webRequestFullScreen","msRequestFullScreen","exitFull","exitFullscreen","useNotification","title","options","Notification","permission","requestPermission","then","useAxios","opts","axiosInstance","defaultAxios","loading","error","data","trigger","setTrigger","refetch","Date","now","catch","err","url","App","changeScreen","setChangeScreen","onChangetitle","useCallback","prev","useref1","initialTitle","setTitle","querySelector","innerText","useTitle","setTimeout","focus","el","htitle","confirmDelete","alert","fadeInText","fadeInText2","online","triggerNotif","body","className","height","position","onClick","placeholder","top","width","src","left","backgroundColor","color","display","border","borderRadius","JSON","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bddc798e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// 창을 닫기 전 저장하지 않았다는 메시지를 전달한다.\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nconst usePreventLeave = () => {\r\n  const listener = (event) => {\r\n    event.preventDefault();\r\n    event.returnValue =\"\"; // 이 부분이 있어야만 작동한다.\r\n  }\r\n  const enablePrevent = () => window.addEventListener(\"beforeunload\", listener)\r\n  const disablePrevent = () => window.removeEventListener(\"beforeunload\",listener)\r\n  return {enablePrevent, disablePrevent};\r\n}\r\nconst App = () => {\r\n  const { enablePrevent, disablePrevent } = usePreventLeave();\r\n\r\n  return (\r\n    <>\r\n      <button onClick={enablePrevent}>protect</button>\r\n      <button onClick={disablePrevent}>unprotect</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default usePreventLeave;","// 만약 사용자가 버튼을 클릭하는 작업을 하면 그 작업을 하기 전 의사를 물어보는 메시지\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nconst useConfirm = (message='', onConfirm, onCancel) => {\r\n  if (!onConfirm || typeof onConfirm !== \"function\") { // 의무 onConfirm이 없거나 함수가 아니면 \r\n    return;\r\n  }\r\n  if (onCancel && typeof onCancel !== \"function\") { // 의무는 아니니깐\r\n    return;\r\n  }\r\n  const confirmAction = () => {\r\n    if (window.confirm(message)) {\r\n      onConfirm();\r\n    } else {\r\n      onCancel();\r\n    }\r\n  };\r\n  return confirmAction;\r\n}\r\n// 함수형 프로그래밍!! 함수를 인자로 받아서 그 함수를 실행 여부 판단, hooks를 사용하지는 않지만 \r\n// 그래도 멋진..!\r\nconst App = () => {\r\n  const deleteWorld = () => console.log(\"delete the world\");\r\n  const abort = () => console.log('aborted')\r\n  const confirmDelete = useConfirm('Are you sure?',deleteWorld, abort);\r\n  return (\r\n    <div className=\"App\">\r\n      <button onClick={confirmDelete}>Delete the world</button>\r\n    </div>\r\n  )\r\n}\r\nexport default useConfirm;","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst useClick = (func) => {\r\n  const element = useRef();\r\n  useEffect(() => {\r\n    if (element.current) {\r\n      element.current.addEventListener(\"click\", func);\r\n      console.log(element.current.textContent);\r\n    }\r\n    return () => {\r\n      console.log('unmount');\r\n      if (element.current) {\r\n        element.current.removeEventListener(\"click\", func);\r\n      }\r\n    }\r\n  }, []);\r\n  if (!func || typeof func !== \"function\") {\r\n    return\r\n  } // useEffect보다 먼저 return 될수 없다는 에러 ? 발생!\r\n  return element;\r\n}\r\n\r\nexport default useClick;","import React, { useEffect } from 'react';\r\n\r\nconst useBeforeLeave = onBefore => {\r\n  const handle = event => {\r\n    const { clientY } = event;\r\n    if(clientY <= 0) {\r\n      onBefore();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.addEventListener(\"mouseleave\", handle);\r\n    return () => {\r\n      document.removeEventListener(\"mouseleave\", handle);\r\n    }\r\n  }, []);\r\n  if (typeof onBefore !== 'function'){\r\n    return;\r\n  }\r\n}\r\n\r\nexport default useBeforeLeave;","import { useRef, useEffect } from 'react';\r\n// 1. hooks 구조 - useRef \r\n/**\r\n * const aaa = () => {\r\n *  const element = useRef();\r\n *  return element\r\n * }\r\n */\r\nconst useFadeIn = (duration = 1, delay = 3) => {\r\n  const element = useRef();\r\n  useEffect(() => {\r\n    if (element.current) {\r\n      const { current } = element;\r\n      current.style.transition = `opacity ${duration}s ease-in-out ${delay}s`;\r\n      current.style.opacity = 1;\r\n    }\r\n    // return () => {\r\n    // }\r\n  }, [])\r\n  if (typeof duration !== \"number\" && typeof delay !== \"number\" ){\r\n    return\r\n  }\r\n  return { ref: element, style: { opacity: 0 } };\r\n}\r\n\r\nexport default useFadeIn;","import { useState, useEffect } from 'react';\r\n\r\nconst useNetwork = (onChange) => {\r\n  const [status, setStatus] = useState(navigator.onLine);\r\n  \r\n  const handleChange = () => {\r\n    if (typeof onChange === \"function\") {\r\n      onChange(navigator.onLine);\r\n    }\r\n    setStatus(navigator.onLine);\r\n  }\r\n  useEffect(() => {\r\n    window.addEventListener(\"online\", handleChange);\r\n    window.addEventListener(\"offline\", handleChange);\r\n    return () => {\r\n      window.removeEventListener(\"online\", handleChange);\r\n      window.removeEventListener(\"offline\", handleChange);\r\n    }\r\n  }, [])\r\n\r\n  return status;\r\n}\r\n\r\nexport default useNetwork;","// 스크롤 변화시 작동시킬 효과를 지정하는 훅\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst useScroll = () => {\r\n  const [ state, setState ] = useState({\r\n    x: 0,\r\n    y: 0\r\n  });\r\n  const onScroll = (e) => {\r\n    console.log(`y: ${window.scrollY} x: ${window.scrollX}`);\r\n    setState({ y: window.scrollY, x: window.scrollX });\r\n  }\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => window.removeEventListener('scroll', onScroll);\r\n  }, [])\r\n  return state;\r\n};\r\n\r\nexport default useScroll;","import React, {useState, useEffect, useRef } from 'react';\r\n\r\nconst useFullscreen = () => {\r\n  const element = useRef();\r\n  const [isFull, setIsFull] = useState(false);\r\n\r\n  const runCb = (isFull) => { // 작동이 신기하네\r\n    console.log(isFull ? 'we are full' : 'we are small');\r\n    setIsFull(isFull);\r\n  }\r\n\r\n  const triggerFull = () => {\r\n    if(element.current) {\r\n      if (element.current.requestFullscreen) {\r\n        element.current.requestFullscreen();\r\n      } else if(element.current.mozRequestFullScreen){\r\n        element.current.mozRequestFullScreen();\r\n      } else if(element.current.webRequestFullScreen){\r\n        element.current.webRequestFullScreen();\r\n      } else if(element.current.msRequestFullScreen){\r\n        element.current.msRequestFullScreen();\r\n      }\r\n      runCb(true);\r\n    } // 브라우저 별로 분리하여 최대화를 해줄 수 있음 .. 이처럼 조건별로 처리하고 싶은 기능이 다른 경우 활용해보도록 하자 !\r\n  }\r\n  const exitFull = () => {\r\n    document.exitFullscreen();\r\n      runCb(false);\r\n  }\r\n  return { element, triggerFull, exitFull, isFull };\r\n}\r\n\r\n\r\nexport default useFullscreen;","import React, { useEffect } from 'react';\r\n\r\nconst useNotification = (title, options ) => {\r\n  if (!(\"Notification\" in window )) return;\r\n  const fireNotif = () => {\r\n    if (Notification.permission !== 'granted') {\r\n      Notification.requestPermission().then(permission => {\r\n        if (permission === 'granted') {\r\n          new Notification(title, options);\r\n        } else {\r\n          return;\r\n        }\r\n      })\r\n    } else {\r\n      new Notification(title, options);\r\n    }\r\n  }\r\n  return fireNotif;\r\n}\r\n\r\nexport default useNotification;","import defaultAxios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// axios를 이용한 hooks! 이와 같이 인스턴스를 내 임의로 설정해서 만들어 낼 수 있다.\r\nconst useAxios = (opts, axiosInstance = defaultAxios) => {\r\n  const [ state, setState ] = useState({\r\n    loading: true,\r\n    error: null,\r\n    data: null\r\n  });\r\n\r\n  const [trigger, setTrigger] = useState(false);\r\n\r\n  const refetch = () => {\r\n    setState({ ...state, loading: true });\r\n    setTrigger(Date.now());\r\n  }\r\n\r\n  useEffect(() => {\r\n    axiosInstance(opts)\r\n    .then(data => {\r\n      setState({ ...state, loading: false, data })\r\n    })\r\n    .catch(err => {\r\n      setState({ ...state, loading: false, err })\r\n    })\r\n  }, [trigger]);\r\n  if (!opts.url) return;\r\n  return {...state, refetch};\r\n}\r\n\r\nexport default useAxios;","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component, useState, useEffect, useRef, useCallback } from 'react';\n// import { useInput } from \"./hooks/useInput\"\n// import { useTabs, content } from \"./useTabs\";\nimport usePreventLeave from './hooks/usePreventLeave';\nimport useConfirm from './hooks/useConfirm';\nimport useClick from './hooks/useClick';\nimport useBeforeLeave from './hooks/useBeforeLeave';\nimport useFadeIn from './hooks/useFadeIn';\nimport useNetwork from './hooks/useNetwork';\nimport useScroll from './hooks/useScroll';\nimport useFullscreen from './hooks/useFullscreen';\nimport useNotification from './hooks/useNotification';\nimport useAxios from './hooks/useAxios';\n\nconst useTitle = initialTitle => {\n  const [title, setTitle ] = useState(initialTitle);\n  const updateTitle = () => {\n    const htmlTitle = document.querySelector('title');\n    htmlTitle.innerText = title;\n  };\n  useEffect( updateTitle , [title])\n  return setTitle;\n}\n\n/* \nunmount 하는 법을 익혀보자.\n*/\n\n\nconst App = () => {\n  // 0\n  const onClickTitle = (e) => { // 이건 그냥 vanila js 같은데?\n    const element = document.querySelector('.titleInput');\n    console.log(element.value)\n    const htmlTitle = document.querySelector('title');\n    htmlTitle.innerText = element.value\n  }\n  // 1. 타이틀 바꾸기\n  const [changeScreen, setChangeScreen] = useState(false)\n  const onChangetitle = useCallback(() => {\n    setChangeScreen((prev) => !prev);\n  }, []);\n  const hi = useTitle('loading...');\n  // setTimeout(() => {\n  //   // hi('home');\n  //   // setChangeScreen((prev) => !prev);\n  //   // console.log('?');\n  // }, 2000) // 2초후에 변경 ==> 렌더링 될때마다 계속실행된다.\n  \n\n  const useref1 = useRef(); // useref1이 마운트가 되기 전에 실행을 해서 처음꺼는 undefined! 하지만 곧 마운트되고 나서 내용이 업데이트되는것을 확인 비동기를 확인?\n  useEffect(() => {   // 이러한 문제는 mount update unmount 기능을 갖고 있는 useEffet로 해결\n    setTimeout(() => {\n      console.log(useref1); \n      useref1.current?.focus() // optional Changing-> ? \n    } , 2000)},[]);\n   \n  const el = document.querySelector('h1');\n  const sayHello = () => console.log(el); // 기존: console.log(el.textContent); 수정: .log(el); 실행을 하니 먼저 마운트된 컴포넌트가 해제되지 않아서 두가지가 동시에 실행되는 것을 확인할 수 있다.\n  const htitle = useClick(sayHello);\n  // 여기에서 리액트 lifecycle에 대해서 다시 생각해볼 수 있다. 1. render 2. update  즉 컴포넌트가 업데이트가 되고 나서 다시 render가 되므로 el은 비워져 있는 것, 그래서 useRef를 사용하는구나\n\n  const { enablePrevent, disablePrevent } = usePreventLeave();\n  const deleteWorld = () => console.log(\"delete the world\");\n  const abort = () => console.log('aborted')\n  const confirmDelete = useConfirm('Are you sure?',deleteWorld, abort);\n\n  const leave = () => alert('dont leave~~');\n  useBeforeLeave(leave);\n  const fadeInText = useFadeIn(1, 2);\n  const fadeInText2 = useFadeIn(3, 1);\n\n  const onLineHandle = (online) => console.log(online?\"we are ready to running a function\":\"off.. we need on\");\n  const online = useNetwork(onLineHandle);\n\n  const { y } = useScroll();\n  \n  \n  const { element, triggerFull, exitFull, isFull } = useFullscreen();\n\n  const triggerNotif = useNotification(\"hey! what a nice Code ..! is'n it?\", {body: 'wow great~'});\n\n  const { loading, data, error, refetch } = useAxios({\n    url: \"https://yts-proxy.now.sh/list_movies.json\"\n  });\n  return (\n    <div className=\"App\" style={{ height: '1000vh', position:'relative' }}>\n      change screen!\n      <br />\n      <button {...fadeInText} onClick={onChangetitle} >화면 바꾸기</button>\n      { !changeScreen \n          ? <>\n              <br />\n              <br />\n              click hello!\n              <h1 ref={htitle}>hello</h1>\n              <br />\n              confirm input focus\n              <br />\n              <input ref={ useref1 } placeholder=\"hihi\" />\n              <br />\n              <br />\n              Test usePreventLeave\n              <br />\n              <button {...fadeInText2} onClick={enablePrevent}>protect</button>\n              <button onClick={disablePrevent}>unprotect</button>\n              <br />\n              <br />\n              Test confirm message!\n              <br />\n              <button onClick={confirmDelete}>Delete the page</button>\n            </>\n          : <> \n              <br/>\n              hello!\n            </>\n      }\n      <div>{online ? 'onLine!' : 'offline'}</div>\n      <br />\n        <h1 style={{ top:50,position: 'fixed', opacity: y > 100 ? `0` : '1', transition: '1s'}}>스크롤해보세요</h1>\n      <br />\n      <br /> \n      <div ref={element}>\n        <img onClick={triggerFull} style={{ width: '50%'}}src=\"https://images.pexels.com/photos/7624265/pexels-photo-7624265.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\" />\n        <br />\n         {isFull ?  <button onClick={exitFull}>X</button> : <button>이미지를 클릭!</button>}\n      </div>\n        <button \n          onClick={triggerNotif} \n          style={{ position:'absolute', top: '0', left: '0', backgroundColor: 'royalblue', color: 'white', display: 'block', width: '100px', height: '50px', border: '2px solid #333', borderRadius: '4px' }}>\n            Notice! \n        </button> \n        <button onClick={refetch}> refetch </button>\n        <div>\n          {loading ? <h1>Loading...</h1> : data && <h2>{JSON.stringify(data)} ok!</h2>}\n        </div>\n\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}