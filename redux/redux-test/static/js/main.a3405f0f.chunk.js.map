{"version":3,"sources":["logo.svg","components/TodoList.jsx","containers/TodoListContainer.jsx","components/TodoForm.jsx","redux/actions.js","containers/TodoFormContainer.jsx","components/UserList.jsx","containers/UserListContainer.jsx","App.js","reportWebVitals.js","redux/reducers/todo.js","redux/reducers/users.js","redux/reducers/reducer.js","redux/reducers/filter.js","redux/store.js","index.js"],"names":["TodoList","todos","map","todo","text","TodoListContainer","useSelector","state","TodoForm","add","inputRef","useRef","ref","onClick","current","value","ADD_TODO","COMPLETE_TODO","SHOW_ALL","SHOW_COMPLETE","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAIL","TodoFormContainer","dispatch","useDispatch","useCallback","type","addTodo","UserList","users","getUsers","useEffect","length","user","login","id","UserListContainer","data","a","axios","get","res","console","error","App","className","src","logo","alt","gutter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","todosInitialState","initialState","loading","reducer","combineReducers","prevState","action","done","index","filter","store","createStore","todoApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3405f0f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nfunction TodoList({todos}) {\r\n\r\n  return (\r\n  <ul>\r\n    {todos.map((todo)=> {\r\n      return <li>{todo.text}</li>\r\n    })}\r\n  </ul>\r\n  )\r\n}\r\nexport default TodoList;","import { useSelector } from \"react-redux\";\r\nimport TodoList from '../components/TodoList';\r\n\r\nfunction TodoListContainer() {\r\n  const todos = useSelector((state) => state.todos)\r\n  return <TodoList todos={todos}/>;\r\n}\r\n\r\nexport default TodoListContainer;","import { useRef } from \"react\";\r\n\r\nfunction TodoForm({add}) {\r\n  const inputRef = useRef();\r\n\r\n  return (\r\n    <div>\r\n      <input ref={inputRef} />\r\n      <button onClick={click}>추가</button>\r\n    </div>\r\n  );\r\n  function click() {\r\n    add(inputRef.current.value)\r\n  }\r\n}\r\n\r\nexport default TodoForm;","export const ADD_TODO = \"ADD_TODO\";\r\nexport const COMPLETE_TODO = 'COMPLETE_TODO';\r\nexport const SHOW_ALL = 'SHOW_ALL';\r\nexport const SHOW_COMPLETE = 'SHOW_COMPLETE';\r\nexport const GET_USERS_START = 'GET_USERS_START'; //깃헙 api 호출을 시작하는 것을 의미\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS'; //깃헙 api 호출이 성공\r\nexport const GET_USERS_FAIL = 'GET_USERS_FAIL'; //깃헙 api 호출이 실패\r\n\r\nexport const addTodo = text => ({ type: ADD_TODO, text })\r\nexport const completeTodo = index => ({type: COMPLETE_TODO, index})\r\nexport const showAll = () => ({ type: SHOW_ALL });\r\nexport const showComplete = () =>({ type: SHOW_COMPLETE });\r\nexport const getUsersStart = () => ({ type: GET_USERS_START })\r\nexport const getUsersSuccess = (data) => ({ type: GET_USERS_SUCCESS, data })\r\nexport const getUsersFail = (error) => ({ type: GET_USERS_FAIL, error })","import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TodoForm from \"../components/TodoForm\";\r\nimport { addTodo } from \"../redux/actions\";\r\n\r\nexport default function TodoFormContainer() {\r\n  const dispatch = useDispatch();\r\n\r\n  const add = useCallback(\r\n    (text) => {\r\n      dispatch(addTodo(text));\r\n    }, [dispatch]\r\n  )\r\n\r\n  return <TodoForm add={add} />;\r\n};","import { useEffect } from \"react\"\r\n\r\nexport default function UserList({ users, getUsers }) {\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, [getUsers])\r\n  \r\n  if (users.length === 0) {\r\n    return <p>현재 유저 정보 없음</p>\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      {users.map( user => (\r\n        <li key={user.id}>{user.login}</li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}","import axios from \"axios\";\r\nimport { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UserList from \"../components/UserList\";\r\nimport { getUsersFail, getUsersStart, getUsersSuccess } from \"../redux/actions\";\r\n\r\nexport default function UserListContainer() {\r\n  const users = useSelector(state => state.users.data)\r\n  const dispatch = useDispatch();\r\n  \r\n  const getUsers = useCallback(async () => {\r\n    try {\r\n      dispatch(getUsersStart());\r\n      const res = await axios.get('https://api.github.com/users')\r\n      dispatch(getUsersSuccess(res.data));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(getUsersFail(error));\r\n    }\r\n  }, [dispatch]);\r\n\r\n\r\n  return <UserList users={users} getUsers={getUsers}/>\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport {Row, Col} from 'antd';\nimport TodoListContainer from './containers/TodoListContainer';\nimport TodoFormContainer from './containers/TodoFormContainer';\nimport UserListContainer from './containers/UserListContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Row gutter={100}>\n          <Col >\n            <UserListContainer />\n          </Col>\n          <Col >\n            <TodoListContainer />\n          </Col>\n          <Col >\n            <TodoFormContainer />\n          </Col>\n        </Row>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_TODO, COMPLETE_TODO } from \"../actions\";\r\n\r\nconst todosInitialState = []; //[{text: '코딩', done: false}, {}]\r\n\r\nexport default function todos(prevState=todosInitialState, action) {\r\n  if (action.type === ADD_TODO) {\r\n    return [...prevState, { text: action.text, done: false } ]\r\n    \r\n  }\r\n  if (action.type === COMPLETE_TODO) {\r\n    return prevState.map((todo, index) => {\r\n      if (index === action.index) {\r\n        return {...todo, done: true}\r\n      }\r\n      return todo;\r\n    })\r\n  }\r\n  return prevState;\r\n}\r\n","import { GET_USERS_FAIL, GET_USERS_START, GET_USERS_SUCCESS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  data: [],\r\n  error: null,\r\n};\r\n\r\nexport default function users(state=initialState, action) {\r\n  if (action.type === GET_USERS_START) {\r\n    return {\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    }\r\n  }\r\n  if (action.type === GET_USERS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      data: action.data,\r\n    }\r\n  }\r\n  if (action.type === GET_USERS_FAIL) {\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      error: action.error,\r\n    }\r\n  }\r\n  return state\r\n}","import { combineReducers } from \"redux\";\r\nimport filter from \"./filter\";\r\nimport todos from \"./todo\";\r\nimport users from './users';\r\n\r\n\r\nconst reducer = combineReducers({\r\n  todos,\r\n  filter,\r\n  users,\r\n});\r\nexport default reducer;","import { SHOW_ALL, SHOW_COMPLETE } from \"../actions\";\r\n\r\nconst filterInitialState = 'ALL';\r\n\r\nexport default function filter(prevState=filterInitialState, action) {\r\n  if (action.type === SHOW_ALL) return 'ALL';\r\n  if (action.type === SHOW_COMPLETE) return 'COMPLETE';\r\n  return prevState;\r\n}","import {createStore} from 'redux';\r\nimport todoApp from './reducers/reducer';\r\n\r\nconst store = createStore(todoApp);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}